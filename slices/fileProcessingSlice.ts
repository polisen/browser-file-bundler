import { createSlice } from "@reduxjs/toolkit";
const initialState = {
};

export const onboardingSlice = createSlice({
  name: "fileProcessing",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    appendResults: (state: any, action: any) => {
      const { id, payload, type, source } = action.payload;
      if (!state[id]) state[id] = {};
      switch (type) {
        case 'progress':
          const { percent } = payload;
          state[id].conversionProgress = percent;
          return
        case 'result':
          state[id] = { ...state[id], payload, source };
          return;
        case 'queue':
          payload.forEach((p: any) => {
            state[p.id] = { ...state[p.id], ...p, source };
          });
          return
        default: return;
      }

    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: () => {},
});

export const { appendResults } = onboardingSlice.actions;

export default onboardingSlice.reducer;
